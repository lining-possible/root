//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace UDPServer.com.whchem.sms {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback TKSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOfInterfaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendShortSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLongSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback TKReceiveSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback receiveMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMSOfInterfaceByTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback YDMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LTMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DXMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback TKMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTkSendResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLtSendResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddYdSendResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDxSendResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private System.Threading.SendOrPostCallback smsYdSendResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback smsDxSendResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback smsLtSendResultOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::UDPServer.Properties.Settings.Default.UDPServer_com_whchem_sms_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event TKSendCompletedEventHandler TKSendCompleted;
        
        /// <remarks/>
        public event SendSMSOfInterfaceCompletedEventHandler SendSMSOfInterfaceCompleted;
        
        /// <remarks/>
        public event SendShortSMSCompletedEventHandler SendShortSMSCompleted;
        
        /// <remarks/>
        public event SendLongSMSCompletedEventHandler SendLongSMSCompleted;
        
        /// <remarks/>
        public event TKReceiveSMSCompletedEventHandler TKReceiveSMSCompleted;
        
        /// <remarks/>
        public event SendMessageCompletedEventHandler SendMessageCompleted;
        
        /// <remarks/>
        public event receiveMessageCompletedEventHandler receiveMessageCompleted;
        
        /// <remarks/>
        public event SendSMSOfInterfaceByTimeCompletedEventHandler SendSMSOfInterfaceByTimeCompleted;
        
        /// <remarks/>
        public event YDMessageListCompletedEventHandler YDMessageListCompleted;
        
        /// <remarks/>
        public event LTMessageListCompletedEventHandler LTMessageListCompleted;
        
        /// <remarks/>
        public event DXMessageListCompletedEventHandler DXMessageListCompleted;
        
        /// <remarks/>
        public event TKMessageListCompletedEventHandler TKMessageListCompleted;
        
        /// <remarks/>
        public event AddTkSendResultCompletedEventHandler AddTkSendResultCompleted;
        
        /// <remarks/>
        public event AddLtSendResultCompletedEventHandler AddLtSendResultCompleted;
        
        /// <remarks/>
        public event AddYdSendResultCompletedEventHandler AddYdSendResultCompleted;
        
        /// <remarks/>
        public event AddDxSendResultCompletedEventHandler AddDxSendResultCompleted;
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        public event smsYdSendResultCompletedEventHandler smsYdSendResultCompleted;
        
        /// <remarks/>
        public event smsDxSendResultCompletedEventHandler smsDxSendResultCompleted;
        
        /// <remarks/>
        public event smsLtSendResultCompletedEventHandler smsLtSendResultCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TKSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TKSend(string UserName, string PassWord, string TelList, string Content) {
            object[] results = this.Invoke("TKSend", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TKSendAsync(string UserName, string PassWord, string TelList, string Content) {
            this.TKSendAsync(UserName, PassWord, TelList, Content, null);
        }
        
        /// <remarks/>
        public void TKSendAsync(string UserName, string PassWord, string TelList, string Content, object userState) {
            if ((this.TKSendOperationCompleted == null)) {
                this.TKSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTKSendOperationCompleted);
            }
            this.InvokeAsync("TKSend", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content}, this.TKSendOperationCompleted, userState);
        }
        
        private void OnTKSendOperationCompleted(object arg) {
            if ((this.TKSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TKSendCompleted(this, new TKSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSOfInterface", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSMSOfInterface(string UserName, string PassWord, string TelList, string Content) {
            object[] results = this.Invoke("SendSMSOfInterface", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSOfInterfaceAsync(string UserName, string PassWord, string TelList, string Content) {
            this.SendSMSOfInterfaceAsync(UserName, PassWord, TelList, Content, null);
        }
        
        /// <remarks/>
        public void SendSMSOfInterfaceAsync(string UserName, string PassWord, string TelList, string Content, object userState) {
            if ((this.SendSMSOfInterfaceOperationCompleted == null)) {
                this.SendSMSOfInterfaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOfInterfaceOperationCompleted);
            }
            this.InvokeAsync("SendSMSOfInterface", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content}, this.SendSMSOfInterfaceOperationCompleted, userState);
        }
        
        private void OnSendSMSOfInterfaceOperationCompleted(object arg) {
            if ((this.SendSMSOfInterfaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSOfInterfaceCompleted(this, new SendSMSOfInterfaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendShortSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendShortSMS(string UserName, string PassWord, string TelList, string Content) {
            object[] results = this.Invoke("SendShortSMS", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendShortSMSAsync(string UserName, string PassWord, string TelList, string Content) {
            this.SendShortSMSAsync(UserName, PassWord, TelList, Content, null);
        }
        
        /// <remarks/>
        public void SendShortSMSAsync(string UserName, string PassWord, string TelList, string Content, object userState) {
            if ((this.SendShortSMSOperationCompleted == null)) {
                this.SendShortSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendShortSMSOperationCompleted);
            }
            this.InvokeAsync("SendShortSMS", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content}, this.SendShortSMSOperationCompleted, userState);
        }
        
        private void OnSendShortSMSOperationCompleted(object arg) {
            if ((this.SendShortSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendShortSMSCompleted(this, new SendShortSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendLongSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendLongSMS(string UserName, string PassWord, string TelList, string Content) {
            object[] results = this.Invoke("SendLongSMS", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendLongSMSAsync(string UserName, string PassWord, string TelList, string Content) {
            this.SendLongSMSAsync(UserName, PassWord, TelList, Content, null);
        }
        
        /// <remarks/>
        public void SendLongSMSAsync(string UserName, string PassWord, string TelList, string Content, object userState) {
            if ((this.SendLongSMSOperationCompleted == null)) {
                this.SendLongSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLongSMSOperationCompleted);
            }
            this.InvokeAsync("SendLongSMS", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content}, this.SendLongSMSOperationCompleted, userState);
        }
        
        private void OnSendLongSMSOperationCompleted(object arg) {
            if ((this.SendLongSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLongSMSCompleted(this, new SendLongSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TKReceiveSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TKReceiveSMS(string UserName, string PassWord) {
            object[] results = this.Invoke("TKReceiveSMS", new object[] {
                        UserName,
                        PassWord});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TKReceiveSMSAsync(string UserName, string PassWord) {
            this.TKReceiveSMSAsync(UserName, PassWord, null);
        }
        
        /// <remarks/>
        public void TKReceiveSMSAsync(string UserName, string PassWord, object userState) {
            if ((this.TKReceiveSMSOperationCompleted == null)) {
                this.TKReceiveSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTKReceiveSMSOperationCompleted);
            }
            this.InvokeAsync("TKReceiveSMS", new object[] {
                        UserName,
                        PassWord}, this.TKReceiveSMSOperationCompleted, userState);
        }
        
        private void OnTKReceiveSMSOperationCompleted(object arg) {
            if ((this.TKReceiveSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TKReceiveSMSCompleted(this, new TKReceiveSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendMessage(string tel, string name, string Content) {
            object[] results = this.Invoke("SendMessage", new object[] {
                        tel,
                        name,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageAsync(string tel, string name, string Content) {
            this.SendMessageAsync(tel, name, Content, null);
        }
        
        /// <remarks/>
        public void SendMessageAsync(string tel, string name, string Content, object userState) {
            if ((this.SendMessageOperationCompleted == null)) {
                this.SendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageOperationCompleted);
            }
            this.InvokeAsync("SendMessage", new object[] {
                        tel,
                        name,
                        Content}, this.SendMessageOperationCompleted, userState);
        }
        
        private void OnSendMessageOperationCompleted(object arg) {
            if ((this.SendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/receiveMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int receiveMessage(string name, string tel) {
            object[] results = this.Invoke("receiveMessage", new object[] {
                        name,
                        tel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void receiveMessageAsync(string name, string tel) {
            this.receiveMessageAsync(name, tel, null);
        }
        
        /// <remarks/>
        public void receiveMessageAsync(string name, string tel, object userState) {
            if ((this.receiveMessageOperationCompleted == null)) {
                this.receiveMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreceiveMessageOperationCompleted);
            }
            this.InvokeAsync("receiveMessage", new object[] {
                        name,
                        tel}, this.receiveMessageOperationCompleted, userState);
        }
        
        private void OnreceiveMessageOperationCompleted(object arg) {
            if ((this.receiveMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.receiveMessageCompleted(this, new receiveMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSOfInterfaceByTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendSMSOfInterfaceByTime(string UserName, string PassWord, string TelList, string Content, System.DateTime SendTime) {
            object[] results = this.Invoke("SendSMSOfInterfaceByTime", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content,
                        SendTime});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSOfInterfaceByTimeAsync(string UserName, string PassWord, string TelList, string Content, System.DateTime SendTime) {
            this.SendSMSOfInterfaceByTimeAsync(UserName, PassWord, TelList, Content, SendTime, null);
        }
        
        /// <remarks/>
        public void SendSMSOfInterfaceByTimeAsync(string UserName, string PassWord, string TelList, string Content, System.DateTime SendTime, object userState) {
            if ((this.SendSMSOfInterfaceByTimeOperationCompleted == null)) {
                this.SendSMSOfInterfaceByTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOfInterfaceByTimeOperationCompleted);
            }
            this.InvokeAsync("SendSMSOfInterfaceByTime", new object[] {
                        UserName,
                        PassWord,
                        TelList,
                        Content,
                        SendTime}, this.SendSMSOfInterfaceByTimeOperationCompleted, userState);
        }
        
        private void OnSendSMSOfInterfaceByTimeOperationCompleted(object arg) {
            if ((this.SendSMSOfInterfaceByTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSOfInterfaceByTimeCompleted(this, new SendSMSOfInterfaceByTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/YDMessageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int YDMessageList(string TelNumber, string Content) {
            object[] results = this.Invoke("YDMessageList", new object[] {
                        TelNumber,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void YDMessageListAsync(string TelNumber, string Content) {
            this.YDMessageListAsync(TelNumber, Content, null);
        }
        
        /// <remarks/>
        public void YDMessageListAsync(string TelNumber, string Content, object userState) {
            if ((this.YDMessageListOperationCompleted == null)) {
                this.YDMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnYDMessageListOperationCompleted);
            }
            this.InvokeAsync("YDMessageList", new object[] {
                        TelNumber,
                        Content}, this.YDMessageListOperationCompleted, userState);
        }
        
        private void OnYDMessageListOperationCompleted(object arg) {
            if ((this.YDMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.YDMessageListCompleted(this, new YDMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LTMessageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int LTMessageList(string TelNumber, string Content) {
            object[] results = this.Invoke("LTMessageList", new object[] {
                        TelNumber,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void LTMessageListAsync(string TelNumber, string Content) {
            this.LTMessageListAsync(TelNumber, Content, null);
        }
        
        /// <remarks/>
        public void LTMessageListAsync(string TelNumber, string Content, object userState) {
            if ((this.LTMessageListOperationCompleted == null)) {
                this.LTMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLTMessageListOperationCompleted);
            }
            this.InvokeAsync("LTMessageList", new object[] {
                        TelNumber,
                        Content}, this.LTMessageListOperationCompleted, userState);
        }
        
        private void OnLTMessageListOperationCompleted(object arg) {
            if ((this.LTMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LTMessageListCompleted(this, new LTMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DXMessageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DXMessageList(string TelNumber, string Content) {
            object[] results = this.Invoke("DXMessageList", new object[] {
                        TelNumber,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DXMessageListAsync(string TelNumber, string Content) {
            this.DXMessageListAsync(TelNumber, Content, null);
        }
        
        /// <remarks/>
        public void DXMessageListAsync(string TelNumber, string Content, object userState) {
            if ((this.DXMessageListOperationCompleted == null)) {
                this.DXMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDXMessageListOperationCompleted);
            }
            this.InvokeAsync("DXMessageList", new object[] {
                        TelNumber,
                        Content}, this.DXMessageListOperationCompleted, userState);
        }
        
        private void OnDXMessageListOperationCompleted(object arg) {
            if ((this.DXMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DXMessageListCompleted(this, new DXMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TKMessageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int TKMessageList(string TelNumber, string Content) {
            object[] results = this.Invoke("TKMessageList", new object[] {
                        TelNumber,
                        Content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void TKMessageListAsync(string TelNumber, string Content) {
            this.TKMessageListAsync(TelNumber, Content, null);
        }
        
        /// <remarks/>
        public void TKMessageListAsync(string TelNumber, string Content, object userState) {
            if ((this.TKMessageListOperationCompleted == null)) {
                this.TKMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTKMessageListOperationCompleted);
            }
            this.InvokeAsync("TKMessageList", new object[] {
                        TelNumber,
                        Content}, this.TKMessageListOperationCompleted, userState);
        }
        
        private void OnTKMessageListOperationCompleted(object arg) {
            if ((this.TKMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TKMessageListCompleted(this, new TKMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTkSendResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddTkSendResult(string TelNumber, string Content, int Result, int Scount) {
            object[] results = this.Invoke("AddTkSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddTkSendResultAsync(string TelNumber, string Content, int Result, int Scount) {
            this.AddTkSendResultAsync(TelNumber, Content, Result, Scount, null);
        }
        
        /// <remarks/>
        public void AddTkSendResultAsync(string TelNumber, string Content, int Result, int Scount, object userState) {
            if ((this.AddTkSendResultOperationCompleted == null)) {
                this.AddTkSendResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTkSendResultOperationCompleted);
            }
            this.InvokeAsync("AddTkSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount}, this.AddTkSendResultOperationCompleted, userState);
        }
        
        private void OnAddTkSendResultOperationCompleted(object arg) {
            if ((this.AddTkSendResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTkSendResultCompleted(this, new AddTkSendResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddLtSendResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddLtSendResult(string TelNumber, string Content, int Result, int Scount) {
            object[] results = this.Invoke("AddLtSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddLtSendResultAsync(string TelNumber, string Content, int Result, int Scount) {
            this.AddLtSendResultAsync(TelNumber, Content, Result, Scount, null);
        }
        
        /// <remarks/>
        public void AddLtSendResultAsync(string TelNumber, string Content, int Result, int Scount, object userState) {
            if ((this.AddLtSendResultOperationCompleted == null)) {
                this.AddLtSendResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLtSendResultOperationCompleted);
            }
            this.InvokeAsync("AddLtSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount}, this.AddLtSendResultOperationCompleted, userState);
        }
        
        private void OnAddLtSendResultOperationCompleted(object arg) {
            if ((this.AddLtSendResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLtSendResultCompleted(this, new AddLtSendResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddYdSendResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddYdSendResult(string TelNumber, string Content, int Result, int Scount) {
            object[] results = this.Invoke("AddYdSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddYdSendResultAsync(string TelNumber, string Content, int Result, int Scount) {
            this.AddYdSendResultAsync(TelNumber, Content, Result, Scount, null);
        }
        
        /// <remarks/>
        public void AddYdSendResultAsync(string TelNumber, string Content, int Result, int Scount, object userState) {
            if ((this.AddYdSendResultOperationCompleted == null)) {
                this.AddYdSendResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddYdSendResultOperationCompleted);
            }
            this.InvokeAsync("AddYdSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount}, this.AddYdSendResultOperationCompleted, userState);
        }
        
        private void OnAddYdSendResultOperationCompleted(object arg) {
            if ((this.AddYdSendResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddYdSendResultCompleted(this, new AddYdSendResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddDxSendResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddDxSendResult(string TelNumber, string Content, int Result, int Scount) {
            object[] results = this.Invoke("AddDxSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddDxSendResultAsync(string TelNumber, string Content, int Result, int Scount) {
            this.AddDxSendResultAsync(TelNumber, Content, Result, Scount, null);
        }
        
        /// <remarks/>
        public void AddDxSendResultAsync(string TelNumber, string Content, int Result, int Scount, object userState) {
            if ((this.AddDxSendResultOperationCompleted == null)) {
                this.AddDxSendResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDxSendResultOperationCompleted);
            }
            this.InvokeAsync("AddDxSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount}, this.AddDxSendResultOperationCompleted, userState);
        }
        
        private void OnAddDxSendResultOperationCompleted(object arg) {
            if ((this.AddDxSendResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDxSendResultCompleted(this, new AddDxSendResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/test", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int test(string tel, string content) {
            object[] results = this.Invoke("test", new object[] {
                        tel,
                        content});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync(string tel, string content) {
            this.testAsync(tel, content, null);
        }
        
        /// <remarks/>
        public void testAsync(string tel, string content, object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[] {
                        tel,
                        content}, this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/smsYdSendResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int smsYdSendResult(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID) {
            object[] results = this.Invoke("smsYdSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount,
                        UserID,
                        SmsID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void smsYdSendResultAsync(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID) {
            this.smsYdSendResultAsync(TelNumber, Content, Result, Scount, UserID, SmsID, null);
        }
        
        /// <remarks/>
        public void smsYdSendResultAsync(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID, object userState) {
            if ((this.smsYdSendResultOperationCompleted == null)) {
                this.smsYdSendResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmsYdSendResultOperationCompleted);
            }
            this.InvokeAsync("smsYdSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount,
                        UserID,
                        SmsID}, this.smsYdSendResultOperationCompleted, userState);
        }
        
        private void OnsmsYdSendResultOperationCompleted(object arg) {
            if ((this.smsYdSendResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smsYdSendResultCompleted(this, new smsYdSendResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/smsDxSendResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int smsDxSendResult(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID) {
            object[] results = this.Invoke("smsDxSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount,
                        UserID,
                        SmsID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void smsDxSendResultAsync(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID) {
            this.smsDxSendResultAsync(TelNumber, Content, Result, Scount, UserID, SmsID, null);
        }
        
        /// <remarks/>
        public void smsDxSendResultAsync(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID, object userState) {
            if ((this.smsDxSendResultOperationCompleted == null)) {
                this.smsDxSendResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmsDxSendResultOperationCompleted);
            }
            this.InvokeAsync("smsDxSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount,
                        UserID,
                        SmsID}, this.smsDxSendResultOperationCompleted, userState);
        }
        
        private void OnsmsDxSendResultOperationCompleted(object arg) {
            if ((this.smsDxSendResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smsDxSendResultCompleted(this, new smsDxSendResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/smsLtSendResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int smsLtSendResult(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID) {
            object[] results = this.Invoke("smsLtSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount,
                        UserID,
                        SmsID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void smsLtSendResultAsync(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID) {
            this.smsLtSendResultAsync(TelNumber, Content, Result, Scount, UserID, SmsID, null);
        }
        
        /// <remarks/>
        public void smsLtSendResultAsync(string TelNumber, string Content, int Result, int Scount, int UserID, string SmsID, object userState) {
            if ((this.smsLtSendResultOperationCompleted == null)) {
                this.smsLtSendResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsmsLtSendResultOperationCompleted);
            }
            this.InvokeAsync("smsLtSendResult", new object[] {
                        TelNumber,
                        Content,
                        Result,
                        Scount,
                        UserID,
                        SmsID}, this.smsLtSendResultOperationCompleted, userState);
        }
        
        private void OnsmsLtSendResultOperationCompleted(object arg) {
            if ((this.smsLtSendResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.smsLtSendResultCompleted(this, new smsLtSendResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void TKSendCompletedEventHandler(object sender, TKSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TKSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TKSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendSMSOfInterfaceCompletedEventHandler(object sender, SendSMSOfInterfaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSOfInterfaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSOfInterfaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendShortSMSCompletedEventHandler(object sender, SendShortSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendShortSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendShortSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendLongSMSCompletedEventHandler(object sender, SendLongSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendLongSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendLongSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void TKReceiveSMSCompletedEventHandler(object sender, TKReceiveSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TKReceiveSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TKReceiveSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendMessageCompletedEventHandler(object sender, SendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void receiveMessageCompletedEventHandler(object sender, receiveMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class receiveMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal receiveMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SendSMSOfInterfaceByTimeCompletedEventHandler(object sender, SendSMSOfInterfaceByTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSOfInterfaceByTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSOfInterfaceByTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void YDMessageListCompletedEventHandler(object sender, YDMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class YDMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal YDMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void LTMessageListCompletedEventHandler(object sender, LTMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LTMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LTMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DXMessageListCompletedEventHandler(object sender, DXMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DXMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DXMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void TKMessageListCompletedEventHandler(object sender, TKMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TKMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TKMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddTkSendResultCompletedEventHandler(object sender, AddTkSendResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTkSendResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTkSendResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddLtSendResultCompletedEventHandler(object sender, AddLtSendResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLtSendResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLtSendResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddYdSendResultCompletedEventHandler(object sender, AddYdSendResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddYdSendResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddYdSendResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddDxSendResultCompletedEventHandler(object sender, AddDxSendResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddDxSendResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddDxSendResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void smsYdSendResultCompletedEventHandler(object sender, smsYdSendResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smsYdSendResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smsYdSendResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void smsDxSendResultCompletedEventHandler(object sender, smsDxSendResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smsDxSendResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smsDxSendResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void smsLtSendResultCompletedEventHandler(object sender, smsLtSendResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class smsLtSendResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal smsLtSendResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591