//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WHChem.OPCMonitor.IMServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtAlarmAuto", Namespace="http://schemas.datacontract.org/2004/07/WHFCS.Server.Model")]
    [System.SerializableAttribute()]
    public partial class BtAlarmAuto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlarmCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlarmInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlarmTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfirmTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisposalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsRealField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MapCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReceiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SendTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmCode {
            get {
                return this.AlarmCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmCodeField, value) != true)) {
                    this.AlarmCodeField = value;
                    this.RaisePropertyChanged("AlarmCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmInfo {
            get {
                return this.AlarmInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmInfoField, value) != true)) {
                    this.AlarmInfoField = value;
                    this.RaisePropertyChanged("AlarmInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmType {
            get {
                return this.AlarmTypeField;
            }
            set {
                if ((this.AlarmTypeField.Equals(value) != true)) {
                    this.AlarmTypeField = value;
                    this.RaisePropertyChanged("AlarmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfirmTime {
            get {
                return this.ConfirmTimeField;
            }
            set {
                if ((this.ConfirmTimeField.Equals(value) != true)) {
                    this.ConfirmTimeField = value;
                    this.RaisePropertyChanged("ConfirmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmUser {
            get {
                return this.ConfirmUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmUserField, value) != true)) {
                    this.ConfirmUserField = value;
                    this.RaisePropertyChanged("ConfirmUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Disposal {
            get {
                return this.DisposalField;
            }
            set {
                if ((object.ReferenceEquals(this.DisposalField, value) != true)) {
                    this.DisposalField = value;
                    this.RaisePropertyChanged("Disposal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsReal {
            get {
                return this.IsRealField;
            }
            set {
                if ((this.IsRealField.Equals(value) != true)) {
                    this.IsRealField = value;
                    this.RaisePropertyChanged("IsReal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MapCode {
            get {
                return this.MapCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MapCodeField, value) != true)) {
                    this.MapCodeField = value;
                    this.RaisePropertyChanged("MapCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReceiveTime {
            get {
                return this.ReceiveTimeField;
            }
            set {
                if ((this.ReceiveTimeField.Equals(value) != true)) {
                    this.ReceiveTimeField = value;
                    this.RaisePropertyChanged("ReceiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BtWeather", Namespace="http://schemas.datacontract.org/2004/07/WHFCS.Server.Model")]
    [System.SerializableAttribute()]
    public partial class BtWeather : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HumidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RainfallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WindspeedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Humidity {
            get {
                return this.HumidityField;
            }
            set {
                if ((this.HumidityField.Equals(value) != true)) {
                    this.HumidityField = value;
                    this.RaisePropertyChanged("Humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Pressure {
            get {
                return this.PressureField;
            }
            set {
                if ((this.PressureField.Equals(value) != true)) {
                    this.PressureField = value;
                    this.RaisePropertyChanged("Pressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rainfall {
            get {
                return this.RainfallField;
            }
            set {
                if ((this.RainfallField.Equals(value) != true)) {
                    this.RainfallField = value;
                    this.RaisePropertyChanged("Rainfall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Temperature {
            get {
                return this.TemperatureField;
            }
            set {
                if ((this.TemperatureField.Equals(value) != true)) {
                    this.TemperatureField = value;
                    this.RaisePropertyChanged("Temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Vane {
            get {
                return this.VaneField;
            }
            set {
                if ((this.VaneField.Equals(value) != true)) {
                    this.VaneField = value;
                    this.RaisePropertyChanged("Vane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Windspeed {
            get {
                return this.WindspeedField;
            }
            set {
                if ((this.WindspeedField.Equals(value) != true)) {
                    this.WindspeedField = value;
                    this.RaisePropertyChanged("Windspeed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMServiceReference.IFcsService", CallbackContract=typeof(WHChem.OPCMonitor.IMServiceReference.IFcsServiceCallback))]
    public interface IFcsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/Login", ReplyAction="http://tempuri.org/IFcsService/LoginResponse")]
        void Login();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendMessage", ReplyAction="http://tempuri.org/IFcsService/SendMessageResponse")]
        void SendMessage(string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendMes", ReplyAction="http://tempuri.org/IFcsService/SendMesResponse")]
        bool SendMes(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendFire", ReplyAction="http://tempuri.org/IFcsService/SendFireResponse")]
        bool SendFire(string fire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendAddPlot", ReplyAction="http://tempuri.org/IFcsService/SendAddPlotResponse")]
        void SendAddPlot(string plotMessage, string symbolName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendDelPlot", ReplyAction="http://tempuri.org/IFcsService/SendDelPlotResponse")]
        void SendDelPlot(string plotID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendDelAllPlot", ReplyAction="http://tempuri.org/IFcsService/SendDelAllPlotResponse")]
        void SendDelAllPlot();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendAlarm", ReplyAction="http://tempuri.org/IFcsService/SendAlarmResponse")]
        bool SendAlarm(System.Collections.Generic.List<WHChem.OPCMonitor.IMServiceReference.BtAlarmAuto> list);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendDelAlarm", ReplyAction="http://tempuri.org/IFcsService/SendDelAlarmResponse")]
        void SendDelAlarm(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFcsService/SendCloseGIS", ReplyAction="http://tempuri.org/IFcsService/SendCloseGISResponse")]
        void SendCloseGIS(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFcsServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFcsService/ReciveMessage")]
        void ReciveMessage(string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFcsService/ReciveWeather")]
        void ReciveWeather(WHChem.OPCMonitor.IMServiceReference.BtWeather weather);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFcsService/ReciveAddPlot")]
        void ReciveAddPlot(string plotMessage, string symbolName);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFcsService/ReciveDeletePlot")]
        void ReciveDeletePlot(string plotID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFcsService/ReciveDeleteAllPlot")]
        void ReciveDeleteAllPlot();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFcsService/ReciveAlarm")]
        void ReciveAlarm(System.Collections.Generic.List<WHChem.OPCMonitor.IMServiceReference.BtAlarmAuto> list);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFcsService/ReciveDelAlarm")]
        void ReciveDelAlarm(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFcsServiceChannel : WHChem.OPCMonitor.IMServiceReference.IFcsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FcsServiceClient : System.ServiceModel.DuplexClientBase<WHChem.OPCMonitor.IMServiceReference.IFcsService>, WHChem.OPCMonitor.IMServiceReference.IFcsService {
        
        public FcsServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FcsServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FcsServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FcsServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FcsServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login() {
            base.Channel.Login();
        }
        
        public void SendMessage(string message) {
            base.Channel.SendMessage(message);
        }
        
        public bool SendMes(string msg) {
            return base.Channel.SendMes(msg);
        }
        
        public bool SendFire(string fire) {
            return base.Channel.SendFire(fire);
        }
        
        public void SendAddPlot(string plotMessage, string symbolName) {
            base.Channel.SendAddPlot(plotMessage, symbolName);
        }
        
        public void SendDelPlot(string plotID) {
            base.Channel.SendDelPlot(plotID);
        }
        
        public void SendDelAllPlot() {
            base.Channel.SendDelAllPlot();
        }
        
        public bool SendAlarm(System.Collections.Generic.List<WHChem.OPCMonitor.IMServiceReference.BtAlarmAuto> list) {
            return base.Channel.SendAlarm(list);
        }
        
        public void SendDelAlarm(string code) {
            base.Channel.SendDelAlarm(code);
        }
        
        public void SendCloseGIS(string userName) {
            base.Channel.SendCloseGIS(userName);
        }
    }
}
